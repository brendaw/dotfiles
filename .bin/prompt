#!/bin/bash

ZSHRC_FILE="$HOME/.zshrc"
PROMPT_CONFIG_FOLDER="$HOME/.bin/prompt.d"

HELP_ARG="--help"

CLOCK_COMMAND="clock"
DATE_COMMAND="date"
ON_OPTION="on"
OFF_OPTION="off"

CLOCK_ON_FILE="$PROMPT_CONFIG_FOLDER/clock.on"
DATE_ON_FILE="$PROMPT_CONFIG_FOLDER/date.on"

MODE_COMMAND="mode"
COMPACT_OPTION="compact"
FULL_OPTION="full"

MODE_COMPACT_FILE="$PROMPT_CONFIG_FOLDER/mode.compact"

function main {
    if [ -z "$1" ]; then
        help_message
    else
        check_args $1 $2
    fi
}

function check_args {
    if [[ "$1" == "$HELP_ARG" ]]; then
        help_message
    elif [[ "$1" == "$MODE_COMMAND" ]]; then
        mode $2
    elif [[ "$1" == "$CLOCK_COMMAND" ]]; then
        clock $2
    elif [[ "$1" == "$DATE_COMMAND" ]]; then
        date $2
    else
        command_not_found $1
    fi
}

function create_config_folder {
    mkdir -p $PROMPT_CONFIG_FOLDER
}

function mode {
    if [[ "$1" == "$HELP_ARG" ]]; then
        mode_help_message
    elif [[ "$1" == "$COMPACT_OPTION" ]]; then
        mode_exec_compact
    elif [[ "$1" == "$FULL_OPTION" ]]; then
        mode_exec_full
    elif [ -z "$1" ]; then
        mode_help_message
    else
        command_not_found $MODE_COMMAND $1
    fi
}

function mode_exec_compact {
    create_config_folder
    touch $MODE_COMPACT_FILE
}

function mode_exec_full {
    rm $MODE_COMPACT_FILE 2> /dev/null
}

function mode_help_message {
    echo -e "Adds a clock showing the current time after user name, or after date if enabled.\n"
    echo -e "Examples:"
    echo -e "\t (without git info and date) \t\tcumbuca:Downloads [23h43] $"
    echo -e "\t (without git info and with date) \tcumbuca:Downloads [26-04-2020 23h43] $"
    echo -e "\t (with git info and without date) \tcumbuca:some-git-repository [23h43] (10 minutes ago at master) $"
    echo -e "\t (with git info and date) \t\tcumbuca:some-git-repository [26-04-2020 23h43] (10 minutes ago at master) $\n"
    echo -e "Usage: prompt clock [on, off]\n"
    echo -e "Available options:\n"
    echo -e "\t on \tTo activate the clock on the prompt."
    echo -e "\t off \tTo disable the clock on the prompt.\n"
    echo -e "Type 'prompt --help' for more info."
}

function clock {
    if [[ "$1" == "$HELP_ARG" ]]; then
        clock_help_message
    elif [[ "$1" == "$ON_OPTION" ]]; then
        clock_exec_on
    elif [[ "$1" == "$OFF_OPTION" ]]; then
        clock_exec_off
    elif [ -z "$1" ]; then
        clock_help_message
    else
        command_not_found $CLOCK_COMMAND $1
    fi
}

function clock_exec_on {
    create_config_folder
    touch $CLOCK_ON_FILE
}

function clock_exec_off {
    rm $CLOCK_ON_FILE 2> /dev/null
}

function clock_help_message {
    echo -e "Choose if prompt enters in compact or full mode.\n"
    echo -e "Examples:"
    echo -e "\t (compact mode without date or clock) \t\t $"
    echo -e "\t (compact mode with date or clock) \t\t [26-04-2020 23h43] $"
    echo -e "\t (full mode without git info and with date or clock) \tcumbuca:Downloads [26-04-2020 23h43] $"
    echo -e "\t (full mode with git info and date or clock) \t\tcumbuca:some-git-repository [26-04-2020 23h43] (10 minutes ago at master) $\n"
    echo -e "Usage: prompt mode [compact, full]\n"
    echo -e "Available options:\n"
    echo -e "\t compact \tTo activate compact mode on the prompt."
    echo -e "\t full \tTo activate full mode on the prompt.\n"
    echo -e "Type 'prompt --help' for more info."
}

function date {
    if [[ "$1" == "$HELP_ARG" ]]; then
        date_help_message
    elif [[ "$1" == "$ON_OPTION" ]]; then
        date_exec_on
    elif [[ "$1" == "$OFF_OPTION" ]]; then
        date_exec_off
    elif [ -z "$1" ]; then
        date_help_message
    else
        command_not_found $DATE_COMMAND $1
    fi
}

function date_exec_on {
    create_config_folder
    touch $DATE_ON_FILE
}

function date_exec_off {
    rm $DATE_ON_FILE 2> /dev/null
}

function date_help_message {
    echo -e "Adds a info showing the current date after user name and before clock, if enabled.\n"
    echo -e "Examples:"
    echo -e "\t (without git info and clock) \t\tcumbuca:Downloads [26-04-2020] $"
    echo -e "\t (without git info and with clock) \tcumbuca:Downloads [26-04-2020 23h43] $"
    echo -e "\t (with git info and without clock) \tcumbuca:some-git-repository [26-04-2020] (10 minutes ago at master) $"
    echo -e "\t (with git info and clock) \t\tcumbuca:some-git-repository [26-04-2020 23h43] (10 minutes ago at master) $\n"
    echo -e "Usage: prompt date [on, off]\n"
    echo -e "Available options:\n"
    echo -e "\t on \tTo activate the date on the prompt."
    echo -e "\t off \tTo disable the date on the prompt.\n"
    echo -e "Type 'prompt --help' for more info."
}

function help_message {
    echo -e "Prompt enhancer with simple commands.\n"
    echo -e "Usage: prompt <command> [option]\n"
    echo -e "Available commands:\n"
    echo -e "\t mode \tChoose if prompt enters in compact or full mode."
    echo -e "\t date \tChoose if shows current date after user name and before clock, if enabled."
    echo -e "\t clock \tChoose if shows current time after user name, or after date if enabled.\n"
    echo -e "Type 'prompt <command> --help' for more info."
}

function command_not_found {
    if [ -z "$2" ]; then
        echo "prompt: command not found: $1"
    else
        echo "prompt: command $1: option not found: $2"
    fi
}

main "$@"

exit 0